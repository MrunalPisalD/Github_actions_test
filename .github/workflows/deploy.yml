name: Build, Push Docker Images to ECR, and Update ECS Services

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    name: Build, Push Docker Images to ECR, and Update ECS Services
    runs-on: ubuntu-latest

    env:
      AWS_REGION: "us-east-1"
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
      ECS_CLUSTER_NAME: "upload_ECS"
      ECS_ROLE_ARN: "arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/your-ecs-role"
      SERVICES: "service1 service2 service3"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker images
        run: |
          for SERVICE in $SERVICES; do
            DOCKERFILE="Dockerfile.${SERVICE}"
            IMAGE_URI="$ECR_REGISTRY/$SERVICE:latest"
            docker build -t $IMAGE_URI -f $DOCKERFILE .
            docker push $IMAGE_URI
          done

      - name: Get image digests
        id: get-digests
        run: |
          for SERVICE in $SERVICES; do
            IMAGE_URI="$ECR_REGISTRY/$SERVICE:latest"
            DIGEST=$(docker images --digests --format "{{.Digest}}" $IMAGE_URI)
            echo "::set-output name=${SERVICE}_digest::$DIGEST"
          done

      - name: Create and push Docker manifests
        run: |
          for SERVICE in $SERVICES; do
            IMAGE_URI="$ECR_REGISTRY/$SERVICE:latest"
            DIGEST=${{ steps.get-digests.outputs["${SERVICE}_digest"] }}
            docker manifest create $IMAGE_URI --amend $IMAGE_URI@${DIGEST}
            docker manifest push $IMAGE_URI
          done

      - name: Update ECS services
        run: |
          for SERVICE in $SERVICES; do
            IMAGE_URI="$ECR_REGISTRY/$SERVICE:latest"
            echo "Updating service $SERVICE with image $IMAGE_URI"
            aws ecs update-service --cluster $ECS_CLUSTER_NAME --service $SERVICE --force-new-deployment --region $AWS_REGION --desired-count 1
          done
