name: Build, Push Docker Images to ECR, and Update ECS Services

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    name: Build, Push Docker Images to ECR, and Update ECS Services
    runs-on: ubuntu-latest

    env:
      AWS_REGION: "us-east-1"
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
      ECS_CLUSTER_NAME: "upload_ECS"

    strategy:
      matrix:
        service: ["image1", "image2", "image3"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        run: |
          DOCKERFILE="${{ matrix.service }}"
          IMAGE_URI="$ECR_REGISTRY/${{ matrix.service }}:latest"
          docker build -t $IMAGE_URI -f $DOCKERFILE .
          docker push $IMAGE_URI

      - name: Get image digest
        id: get-digest
        run: |
          IMAGE_URI="$ECR_REGISTRY/${{ matrix.service }}:latest"
          DIGEST=$(docker images --digests --format "{{.Digest}}" $IMAGE_URI)
          echo "::set-output name=digest::$DIGEST"

      - name: Create and push Docker manifest
        run: |
          IMAGE_URI="$ECR_REGISTRY/${{ matrix.service }}:latest"
          DIGEST=${{ steps.get-digest.outputs.digest }}
