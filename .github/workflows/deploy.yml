name: Build and Push Docker Images to AWS ECR

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - environment: staging
            service: service1
            dockerfile: Dockerfile.image1
            container_name: container1
          - environment: production
            service: service2
            dockerfile: Dockerfile.image2
            container_name: container2
          - environment: qa
            service: service3
            dockerfile: Dockerfile.image3
            container_name: container3

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensure all tags are fetched

      - name: Install dos2unix
        run: sudo apt-get install dos2unix

      - name: Convert line endings
        run: dos2unix ./build/git_update.sh

      - name: List build directory contents
        run: ls -alh build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |
          chmod +x ./build/git_update.sh
          bash ./build/git_update.sh -v major

      - name: Build, Tag, and Push the Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: lesson-086
          IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ${{ matrix.dockerfile }} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Create ECS task definition
        run: |
          cat <<EOF > ecs-task-def.json
          {
            "family": "${{ matrix.service }}-task-family",
            "containerDefinitions": [
              {
                "name": "${{ matrix.container_name }}",
                "image": "${{ steps.login-ecr.outputs.registry }}/lesson-086:${{ steps.increment-git-tag.outputs.git-tag }}",
                "essential": true,
                "memory": 512,
                "cpu": 256,
                "portMappings": [
                  {
                    "containerPort": 80,
                    "hostPort": 80
                  }
                ]
              }
            ]
          }
          EOF

      - name: Register ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-def.json

      - name: Deploy to ECS service
        uses: aws-actions/amazon-ecs-update-service@v1
        with:
          cluster: your-cluster-name
          service: ${{ matrix.service }}
          task-definition: ${{ steps.task-def.outputs.task-definition }}
