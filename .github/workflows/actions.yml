name: Build and Push Golang Image to AWS ECR

on:
  push:
    branches: [ main ]

# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  job1:
      runs-on: ubuntu-latest
  
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0 # Ensure all tags are fetched
  
        - name: Install dos2unix
          run: sudo apt-get install -y dos2unix
  
        - name: Convert line endings
          run: dos2unix ./build/git_update.sh
  
        - name: List build directory contents
          run: ls -alh build
  
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1
  
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2
  
        - name: Automatic Tagging of Releases
          id: increment-git-tag
          run: |
            chmod +x ./build/git_update.sh
            ./build/git_update.sh -v major
  
        - name: Build, Tag, and Push the Image to Amazon ECR
          id: build-image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: testvj
            IMAGE_TAG: 77
            
            run: |
              # docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile_web_1 .
              docker build -f DockerFile/Dockerfile_web_1
              docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
              echo "IMAGE $IMAGE_TAG is pushed to $ECR_REGISTRY/$ECR_REPOSITORY"
              echo "image_tag=$IMAGE_TAG"
          # run: |
          #   docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . 

  job2:
      name: Build and Push to ECR
      runs-on: ubuntu-latest
  
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0 # Ensure all tags are fetched
  
        - name: Install dos2unix
          run: sudo apt-get install -y dos2unix
  
        - name: Convert line endings
          run: dos2unix ./build/git_update.sh
  
        - name: List build directory contents
          run: ls -alh build
  
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1
  
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2
  
        - name: Automatic Tagging of Releases
          id: increment-git-tag
          run: |
            chmod +x ./build/git_update.sh
            ./build/git_update.sh -v major
  
        - name: Build, Tag, and Push the Image to Amazon ECR
          id: build-image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: testvj
            IMAGE_TAG: 78
          run: |
              docker build • •-file Dockerfile_web_2 ••tag ay-app-dotnet:$(date +s)
              docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
              echo "IMAGE $IMAGE_TAG is pushed to $ECR_REGISTRY/$ECR_REPOSITORY"
              echo "image_tag=$IMAGE_TAG"

  job3:
      runs-on: ubuntu-latest
  
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0 # Ensure all tags are fetched
  
        - name: Install dos2unix
          run: sudo apt-get install -y dos2unix
  
        - name: Convert line endings
          run: dos2unix ./build/git_update.sh
  
        - name: List build directory contents
          run: ls -alh build
  
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1
  
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2
  
        - name: Automatic Tagging of Releases
          id: increment-git-tag
          run: |
            chmod +x ./build/git_update.sh
            ./build/git_update.sh -v major
  
        - name: Build, Tag, and Push the Image to Amazon ECR
          id: build-image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: testvj
            IMAGE_TAG: 79
            
            run: |
              docker build • •-file Dockerfile_web_3 ••tag ay-app-dotnet:$(date +s)
              docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
              echo "IMAGE $IMAGE_TAG is pushed to $ECR_REGISTRY/$ECR_REPOSITORY"
              echo "image_tag=$IMAGE_TAG"
          # run: |
          #   docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

